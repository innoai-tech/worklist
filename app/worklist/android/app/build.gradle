plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader -> localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "tech.innoai.worklist"
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "tech.innoai.worklist"
        versionName flutterVersionName
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()


        // https://github.com/flutter/flutter/issues/49544#issuecomment-1173275137
        project.android.applicationVariants.all { variant ->
            variant.outputs.all { output ->
                output.versionCodeOverride = flutterVersionCode.toInteger()
            }
        }
    }

    signingConfigs {
        release {
            def keystore = System.getenv("KEYSTORE")
            def kAlias = System.getenv("KEYSTORE_ALIAS")
            def kPass = System.getenv("KEYSTORE_PASS")

            storeFile file("$keystore")
            keyAlias "$kAlias"
            keyPassword "$kPass"
            storePassword "$kPass"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
        debug {
            applicationIdSuffix ".debug"
        }
    }
}

flutter {
    source '../..'
}

dependencies {}
